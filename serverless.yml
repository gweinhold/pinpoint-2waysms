service: pinpoint-2way
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  memorySize: 512
  timeout: 10
  runtime: dotnetcore2.1
  region: us-west-2
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "mobiletargeting:SendMessages"
      Resource:
        - "arn:aws:mobiletargeting:us-west-2:<accountid>:apps/<projectid>/*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.dynamodbTable}"  
  environment:
    region: ${self:provider.region}
    originationNumber: "<longcode>"
    projectId: "<projectid>"
    dynamodbTable: "Report"

package:
  individually: true

functions:
  processsms:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::ProcessSms
    package:
      artifact: bin/release/netcoreapp2.1/processsms.zip
    events:
      - sns: sms-received

resources:
 Resources:
   Report:
     Type: AWS::DynamoDB::Table
     Properties:
       TableName: ${self:provider.environment.dynamodbTable}
       AttributeDefinitions:
         -
           AttributeName: Id
           AttributeType: S
       KeySchema:
         -
           AttributeName: Id
           KeyType: HASH
       ProvisionedThroughput:
         ReadCapacityUnits: 1
         WriteCapacityUnits: 1
# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
